it('i10', () => {
});
it('i2', () => {
~~ [Should contain at least 1 blank lines before it]
});

it('i3', () => {
});


it('text in desc4', () => {
});



describe('text in desc5', () => {
  it('text in desc4', fn);
  ~~ [Should contain at least 1 blank lines before it]
});


describe('d6', () => {

  it('d6.1', fn);

  it('d6.2', fn);
  it('d6.3', fn);
  ~~ [Should contain at least 1 blank lines before it]

  it('d6.3', fn);


  describe('d6', () => {
  });
  it('d6.3', fn);
  ~~ [Should contain at least 1 blank lines before it]


  describe('d6', () => {
  });

  it('d6.3', fn);


  describe('d6', () => {
    it('d6.3', fn);
    ~~ [Should contain at least 1 blank lines before it]

    it('d6.3', () => {
    });
    it('d6.3', fn);
    ~~ [Should contain at least 1 blank lines before it]

    it('d6.3', fn);
  });

});


describe('d7', () => {

  it('6.1', () => {
  });
});

it.only('d8', fn);
it.only('d8', () => {
~~ [Should contain at least 1 blank lines before it]
});

it.only('d8', fn);
it.each(table)(name, fn, timeout);
~~ [Should contain at least 1 blank lines before it]

it.only.each(table)(name, fn);
it.only.each(table)(name, () => {
~~ [Should contain at least 1 blank lines before it]
});


it.skip(name, fn);
it.skip(name, fn);
~~ [Should contain at least 1 blank lines before it]
it.skip.each(table)(name, fn);
~~ [Should contain at least 1 blank lines before it]

xit(name, fn);
xit(name, () => {
~~~ [Should contain at least 1 blank lines before xit]
});

test('', fn);
test('', fn);
~~~~ [Should contain at least 1 blank lines before test]
test.only('', fn);
~~~~ [Should contain at least 1 blank lines before test]
test.skip('', fn);
~~~~ [Should contain at least 1 blank lines before test]
test.todo('', fn);
~~~~ [Should contain at least 1 blank lines before test]


xtest('', fn);
xtest('', fn);
~~~~~ [Should contain at least 1 blank lines before xtest]

it('', fn);
xtest('', fn);
~~~~~ [Should contain at least 1 blank lines before xtest]
